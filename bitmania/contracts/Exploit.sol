// SPDX-License-Identifier: MIT
pragma solidity 0.8.4;
import "hardhat/console.sol";

//JUST USED IT TO TEST THINGS UP. DIDNT NEED IT TO SOLVE CHALLENGE

contract Exploit {
    function reverse(string calldata stringFlag)
        public
        view
        returns (bytes calldata)
    {
        return bytes(stringFlag);
    }

    function convertBytesToString(bytes calldata value)
        public
        view
        returns (string memory)
    {
        return string(value);
    }

    function encryptFlag(string memory stringFlag)
        public
        view
        returns (bytes memory)
    {
        bytes memory flag = bytes(stringFlag);
        console.logBytes(flag);
        for (uint256 i; i < flag.length; i++) {
            if (i > 0) flag[i] ^= flag[i - 1];
            flag[i] ^= flag[i] >> 4;
            flag[i] ^= flag[i] >> 3;
            flag[i] ^= flag[i] >> 2;
            flag[i] ^= flag[i] >> 1;
        }

        return flag;
    }

    function decryptFlag(bytes memory flag) public view returns (bytes memory) {
        for (uint256 i; i < flag.length; i++) {}
        return flag;
    }

    function convertByte(bytes memory flag) public view returns (bytes memory) {
        for (uint256 i; i < flag.length; i++) {
            if (i > 0) flag[i] ^= flag[i - 1];
            flag[i] ^= flag[i] >> 4;
            flag[i] ^= flag[i] >> 3;
            flag[i] ^= flag[i] >> 2;
            flag[i] ^= flag[i] >> 1;
        }

        return flag;
    }
}
